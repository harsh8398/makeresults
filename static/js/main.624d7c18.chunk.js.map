{"version":3,"sources":["utils/utils.js","components/JSONInput.jsx","components/MakeResults.jsx","App.js","reportWebVitals.js","index.js"],"names":["tokenEpoch","Date","getTime","MAP_TYPE_TOKENS","number","boolean","blacklist","inflateTemplate","res","varCounters","booleanTemplate","count","output","i","JSONInput","setSearch","converted","setConverted","useState","value","setValue","json","setJson","error","setError","handleClick","func","timer","timeout","args","clearTimeout","setTimeout","apply","debounce","data","tokenize","length","JSON","parse","key","includes","e","tempString","stringify","slice","replace","RegExp","_","convertToMakeResults","obj","icon","screenReaderText","label","onClick","expandChildren","startAdornment","style","display","alignItems","padding","size","multiline","placeholder","onChange","spellCheck","rowsMax","maxLength","MakeResults","search","App","family","density","colorScheme","className","level","gutter","Row","Column","span","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.624d7c18.chunk.js","sourcesContent":["const tokenEpoch = new Date().getTime();\n\nconst MAP_TYPE_TOKENS = {\n  number: `##number${tokenEpoch}##`,\n  // string: `##string${tokenEpoch}##`,\n  boolean: `##boolean${tokenEpoch}##`,\n  // bigint: `##bigint${tokenEpoch}##`,\n  // undefined: `##undefined${tokenEpoch}##`,\n  // object: undefined, // uncludes null, [], {}, etc.\n};\n\n// const generateVar = (type, count) => `##${MAP_TYPE_TOKENS[type]}${count}##`;\n\nconst blacklist = [\"object\", \"undefined\", \"bigint\", \"string\"];\n\n// const effectiveTokens = {};\n\nexport const convertToMakeResults = (data, tokenize) => {\n  const varCounters = {\n    number: 0,\n    boolean: 0,\n  };\n\n  if (data.length === 0) {\n    return [-1, null];\n  }\n  let json = {};\n  if (tokenize) {\n    try {\n      json = JSON.parse(data, (key, value) => {\n        if (blacklist.includes(typeof value)) {\n          return value;\n        } else {\n          value = MAP_TYPE_TOKENS[typeof value];\n          return value;\n        }\n      });\n    } catch (e) {\n      return [-1, json];\n    }\n    let tempString = { data: JSON.stringify(json) };\n    let res = JSON.stringify(tempString)\n      .slice(9, -2)\n      .replace(\n        new RegExp(`\\\\\\\\\"${MAP_TYPE_TOKENS[\"number\"]}\\\\\\\\\"`, \"g\"),\n        function (_) {\n          varCounters[\"number\"] += 1;\n          return `\".num${varCounters[\"number\"]}.\"`;\n        }\n      )\n      .replace(\n        new RegExp(`\\\\\\\\\"${MAP_TYPE_TOKENS[\"boolean\"]}\\\\\\\\\"`, \"g\"),\n        function (_) {\n          varCounters[\"boolean\"] += 1;\n          return `\".boolean${varCounters[\"boolean\"]}.\"`;\n        }\n      );\n    return [inflateTemplate(res, varCounters), json];\n  } else {\n    try {\n      json = JSON.parse(data);\n    } catch (e) {\n      return [-1, json];\n    }\n\n    return [inflateTemplate(data), json];\n  }\n};\n\nfunction inflateTemplate(res, varCounters) {\n  const baseTemplate = \"| makeresults count=1\";\n  const numTemplate = (count) => `| eval num${count}=random()`;\n  const booleanTemplate = (count) =>\n    `| eval boolean${count}=if(random()%100 > 50, \"true\", \"false\") `;\n\n  let output = baseTemplate;\n  if (typeof varCounters !== \"undefined\") {\n    for (let i = 1; i <= varCounters[\"number\"]; i++) {\n      output += \"\\n\" + numTemplate(i);\n    }\n    for (let i = 1; i <= varCounters[\"boolean\"]; i++) {\n      output += \"\\n\" + booleanTemplate(i);\n    }\n  }\n  output += `\n| eval _raw=\"${res}\"\n| collect index=main`;\n  return output;\n}\n\nexport function debounce(func, timeout = 300) {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(this, args);\n    }, timeout);\n  };\n}\n","import { useState } from \"react\";\nimport Text from \"@splunk/react-ui/Text\";\nimport Button from \"@splunk/react-ui/Button\";\nimport Code from \"@splunk/react-icons/Code\";\nimport ArrowLeft from \"@splunk/react-icons/ArrowLeft\";\nimport Check from \"@splunk/react-icons/Check\";\nimport JSONTree from \"@splunk/react-ui/JSONTree\";\nimport { debounce, convertToMakeResults } from \"../utils/utils\";\n\nfunction JSONInput({ setSearch, converted, setConverted }) {\n  const [value, setValue] = useState(\"\");\n  const [json, setJson] = useState({});\n  const [error, setError] = useState(false);\n  let handleChange = (e, { value }) => {\n    setValue(value);\n    // delayedMakeResults();\n  };\n  let handleClick = debounce(() => {\n    let [res, obj] = convertToMakeResults(value, true);\n    if (res === -1) {\n      setError(true);\n    } else {\n      setSearch(res);\n      setJson(obj);\n      setConverted(true);\n    }\n  });\n  if (error) {\n    // reset\n    return (\n      <>\n        <Button\n          icon={<ArrowLeft screenReaderText={null} />}\n          label=\"Try Again\"\n          onClick={() => {\n            setError(false);\n            setValue(\"\");\n            setSearch(\"\");\n            setConverted(false);\n          }}\n        />\n        <br />\n        <h1>Error! Please validate JSON input!</h1>\n      </>\n    );\n  }\n  return (\n    <>\n      {converted ? (\n        <>\n          <Button\n            icon={<ArrowLeft screenReaderText={null} />}\n            label=\"Go Back\"\n            onClick={() => setConverted(false)}\n          />\n          <br />\n          <h1>Tokenized JSON</h1>\n          <JSONTree json={json} expandChildren />\n        </>\n      ) : (\n        <>\n          <h1>Paste your JSON event:</h1>\n          <Text\n            value={value}\n            startAdornment={\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  padding: \"0 8px\",\n                }}\n              >\n                <Code size={1} />\n              </div>\n            }\n            multiline\n            placeholder=\"paste your json event here...\"\n            onChange={handleChange}\n            spellCheck={false}\n            rowsMax={20}\n            maxLength={1000}\n          />\n          <br />\n          <Button\n            icon={<Check screenReaderText={null} />}\n            label=\"makeresults!\"\n            onClick={handleClick}\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nexport default JSONInput;\n","import Input from \"@splunk/react-search/components/Input\";\n\nfunction MakeResults({ search }) {\n  return (\n    <>\n      <h1>Corresponding Command:</h1>\n      <Input value={search} />\n    </>\n  );\n}\n\nexport default MakeResults;\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport SplunkThemeProvider from \"@splunk/themes/SplunkThemeProvider\";\nimport JSONInput from \"./components/JSONInput\";\nimport ColumnLayout from \"@splunk/react-ui/ColumnLayout\";\nimport Heading from \"@splunk/react-ui/Heading\";\nimport MakeResults from \"./components/MakeResults\";\n\nfunction App() {\n  const [search, setSearch] = useState(\"# search will get generated here...\");\n  const [converted, setConverted] = useState(false);\n  return (\n    <SplunkThemeProvider family=\"prisma\" density=\"compact\" colorScheme=\"dark\">\n      <div className=\"App\">\n        <Heading level={1}>&gt; makeresults</Heading>\n        <ColumnLayout gutter={8}>\n          <ColumnLayout.Row>\n            <ColumnLayout.Column span={12}>\n              <JSONInput\n                setSearch={setSearch}\n                converted={converted}\n                setConverted={setConverted}\n              />\n            </ColumnLayout.Column>\n          </ColumnLayout.Row>\n          <ColumnLayout.Row>\n            <ColumnLayout.Column span={12}>\n              {converted && <MakeResults search={search} />}\n            </ColumnLayout.Column>\n          </ColumnLayout.Row>\n        </ColumnLayout>\n      </div>\n    </SplunkThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}